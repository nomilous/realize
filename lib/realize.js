// Generated by CoffeeScript 1.6.3
var connect, fs, load, pipeline, program, realize, run, _ref;

fs = require('fs');

program = require('commander');

pipeline = require('when/pipeline');

_ref = require('./realizer'), load = _ref.load, connect = _ref.connect, run = _ref.run;

module.exports = realize = {
  exit: function(error) {
    if (error == null) {
      process.exit(0);
    }
    process.stderr.write(error.toString());
    return process.exit(error.errno || 100);
  },
  error: function(errno, code, message) {
    var error;
    error = new Error(message);
    error.errno = errno;
    error.code = code;
    return error;
  },
  marshal: function(program) {
    program.version(JSON.parse(fs.readFileSync(__dirname + '/../package.json'), 'utf8').version);
    program.usage('[options] [realizer]');
    program.option('-p, --port  <num>      ', 'Connect to Objective at port');
    program.option('-X, --no-https         ', 'Connect insecurely', false);
    program.parse(process.argv);
    return {
      filename: program.args[0],
      connect: true,
      https: program.https,
      port: program.port
    };
  },
  load: load,
  connect: connect,
  run: run,
  exec: function() {
    return pipeline([
      function() {
        return realize.marshal(program);
      }, function(params) {
        return realize.load(params);
      }, function(realizer) {
        return realize.connect(realizer);
      }, function(controls) {
        return realize.run(controls);
      }
    ]).then(function(resolve) {}, realize.exit, function(notify) {});
  }
};
