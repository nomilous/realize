// Generated by CoffeeScript 1.6.3
var configure, connect, fs, pipeline, program, realize, run, _ref;

fs = require('fs');

program = require('commander');

pipeline = require('also').pipeline;

_ref = require('./realizer'), configure = _ref.configure, connect = _ref.connect, run = _ref.run;

module.exports = realize = {
  exit: function(error) {
    if (error == null) {
      process.exit(0);
    }
    process.stderr.write(error.toString());
    return process.exit(error.errno || 100);
  },
  marshal: function(program) {
    program.version(JSON.parse(fs.readFileSync(__dirname + '/../package.json'), 'utf8').version);
    program.usage('[options]');
    program.option('-f, --file <filename>  ', 'Run realizer from file.');
    program.option('-x, --no-connect       ', 'Run without connection to Objective.', false);
    program.option('-p, --port <num>       ', 'Connect to Objective at port.');
    program.option('-X, --no-https         ', 'Connect insecurely.', false);
    program.parse(process.argv);
    return {
      filename: program.file,
      connect: program.connect,
      https: program.https,
      port: program.port
    };
  },
  configure: configure,
  connect: connect,
  run: run,
  exec: function() {
    return pipeline([
      function() {
        return realize.marshal(program);
      }, function(params) {
        return realize.configure(params);
      }, function(realizer) {
        return realize.connect(realizer);
      }, function(controls) {
        return realize.run(controls);
      }
    ]).then(function(resolve) {}, realize.exit, function(notify) {});
  }
};
