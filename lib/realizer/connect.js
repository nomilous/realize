// Generated by CoffeeScript 1.6.3
var connect, deferred, error, notice;

deferred = require('also').deferred;

notice = require('notice');

error = require('./error');

module.exports = connect = deferred(function(action, realizer) {
  var notify, opts, realizerFn, reject, resolve;
  resolve = action.resolve, reject = action.reject, notify = action.notify;
  opts = realizer.opts, realizerFn = realizer.realizerFn;
  return process.nextTick(function() {
    var MessageBus, context, key, noticeConfig, _base, _base1;
    noticeConfig = {
      capsule: opts.capsules || {}
    };
    (_base = noticeConfig.capsule).realize || (_base.realize = {});
    (_base1 = noticeConfig.capsule).phrase || (_base1.phrase = {});
    if (opts.connect == null) {
      opts.standalone = true;
      return resolve({
        realizerFn: realizerFn,
        uplink: notice(noticeConfig).create(opts.uuid),
        opts: opts
      });
    }
    context = {};
    for (key in opts) {
      if (key === 'connect') {
        continue;
      }
      context[key] = opts[key];
    }
    opts.context = context;
    MessageBus = notice.client(noticeConfig);
    return MessageBus.create(opts.uuid, opts, function(err, uplink) {
      if (err != null) {
        return reject(error({
          errno: err.errno || 106,
          code: err.code || 'ENOUPLINK',
          message: err.message
        }));
      }
      return resolve({
        realizerFn: realizerFn,
        uplink: uplink,
        opts: opts
      });
    });
  });
});
